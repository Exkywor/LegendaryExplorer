# .NET Desktop

# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

# Trigger on all branches. Only some branches however will run certain steps
#trigger:
#- *

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'ME3Explorer.sln'
  buildPlatform: 'x64'
  buildConfiguration: 'WinAzureRelease'
  appMajorMin: '5.1'
  appMajor: '5'
  appMinor: '1'
  appPatch: '0'
  disable.coverage.autogenerate: 'true'

steps:
# Change artifact name when the version major/minor changes
- task: PowerShell@2
  displayName: 'Prepare for pipeline build'
  inputs:
    targetType: 'inline'
    script: |
      $artifactname = "me3explorernightly_$(appMajorMin).$(appPatch).$(Build.BuildId)"
      # Date--------------------------------------------
      $date=$(Get-Date -Format s);
      Write-Host "##vso[task.setvariable variable=time]$date"
      # Commit Message (Multiliner)-----------------------
      $commitMessageFull = git log -1 --pretty=%B
      $numlines = $($commitMessageFull | measure).Count
      if ($numlines > 0) { 
        $commitMessageFull=[system.String]::Join(" ", $commitMessageFull)
      }
      Write-Host "##vso[task.setvariable variable=commitMessageFull]$commitMessageFull"
      # Author-------------------------------------------
      $author = git log -1 --pretty=format:'%an'
      Write-Host "##vso[task.setvariable variable=author]$author"
      Write-Host "Author: $($author)"
      # Set version (ME3Explorer)
      (Get-Content .\ME3Explorer\Properties\AssemblyInfo.cs).replace("0`"","$(Build.BuildId)`"") | out-file -FilePath .\ME3Explorer\Properties\AssemblyInfo.cs
      # Set version (ME3ExplorerCore)
      $xml = [xml](Get-Content .\ME3ExplorerCore\ME3ExplorerCore.csproj)
      $ver = New-Object System.Version($appMajor, $appMinor, $appPatch, [int]$(Build.BuildId))
      $xml.Project.PropertyGroup[0].Version = $ver.ToString() #Hopefully nobody re-organizes the csproj!
      $xml.Save(".\ME3ExplorerCore\ME3ExplorerCore.csproj")

      # Get report generator
      dotnet tool install -g dotnet-reportgenerator-globaltool

# API keys for telemety (does not trigger on PR)
- task: PowerShell@2
  displayName: 'Set telemetry key'
  condition: and(succeeded(), ne(variables['Build.SourceBranchName'], 'merge'))
  inputs:
    targetType: 'inline'
    script: |
      # API Keys for telemetry--------------------------
      $apikeysprivatefile = "namespace ME3Explorer`n{`n    public static partial class APIKeys`n    {`n        public static string Private_AppCenter {get;} = `"$(AppCenterKey)`";`n    }`n}"
      Set-Content -Path "$(Build.Repository.LocalPath)\ME3Explorer\APIKeysPrivate.cs" -Value $apikeysprivatefile

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  displayName: 'Restore Nuget packages'
  inputs:
    restoreSolution: '$(solution)'

# Test ME3ExplorerCore
- task: DotNetCoreCLI@2
  displayName: 'Test ME3ExplorerCore'
  inputs:
    command: 'test'
    projects: 'ME3ExplorerCore.Tests/ME3ExplorerCore.Tests.csproj'
    arguments: '--configuration WinAzureTest /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:DebugType=pdbonly -v normal'
    publishTestResults: true

# Find output file
- task: PowerShell@2
  displayName: 'Generate code coverage HTML'
  inputs:
    targetType: 'inline'
    script: |
      reportgenerator -reports:**/coverage.cobertura.xml -targetdir:CoverageReport -reporttypes:"HtmlInline_AzurePipelines;Cobertura" -classfilters:"-*Gammtek*;-*.SharpDX.*" -verbosity:Verbose

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '**/coverage.cobertura.xml'
    reportDirectory: 'CoverageReport'
    failIfCoverageEmpty: true

# Build ME3Explorer UI Application
- task: VSBuild@1
  displayName: 'Build ME3Explorer'
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: ArchiveFiles@2
  displayName: '7z ME3Explorer'
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)/ME3Explorer/bin/x64/$(buildConfiguration)'
    includeRootFolder: false
    archiveType: '7z'
    archiveFile: '$(Build.ArtifactStagingDirectory)/me3explorer_nightly_cibuild_$(appMajorMin).$(appPatch).$(Build.BuildId).7z'
    replaceExistingArchive: true
    sevenZipCompression: maximum

- task: PublishBuildArtifacts@1
  displayName: 'Publish ME3Explorer'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'me3explorernightly_$(appMajorMin).$(appPatch).$(Build.BuildId)'
    publishLocation: 'Container'

# Notify ME3Tweaks that a new beta build has been built
- task: PowerShell@2
  displayName: 'Notify ME3Tweaks'
  condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'Beta'))
  inputs:
    targetType: 'inline'
    script: |
      # Webrequest using powershell since invokerestapi doesn't work on anything but server jobs
      Invoke-WebRequest -Uri $(me3explorerApiEndpoint)
    errorActionPreference: 'continue'

# NOT PULL REQUEST DISCORD WEBHOOK
- task: ado-discord-webhook@1
  displayName: 'Discord - New official nightly'
  condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'Beta'))
  inputs:
    channelId: '$(discord_channel_id)'
    webhookKey: '$(discord_webhook_key)'
    name: 'Azure DevOps CI'
    avatar: 'https://i.imgur.com/mUtPj2S.png'
    messageType: 'embeds'
    embeds: |
      [{
        "title": "ME3Explorer - ME3Tweaks Fork Build Complete",
        "description": "A new nightly build of ME3Explorer has been built. You can automatically download the latest build with ME3Tweaks Mod Manager by going to Tools > ME3Explorer (Nightly). You can manually download this build through this link. Nightly builds may be unstable and have bugs.",
        "thumbnail": {
          "url": "https://i.imgur.com/mUtPj2S.png",
          "height": 64,
          "width": 64
        },
        "fields": [{
          "name": "Triggering commit",
          "value": "$(commitMessageFull)"
        },
        {
          "name": "Author",
          "value": "$(author)"
        },
        {
          "name": "Branch",
          "value": "$(Build.SourceBranchName)"
        },
        {
          "name": "Version",
          "value": "$(appMajorMin).$(appPatch).$(Build.BuildId)"
        }],
        "url": "https://dev.azure.com/ME3Tweaks/ME3Explorer/_build/results?buildId=$(Build.BuildId)&view=artifacts",
        "timestamp": "$(time)"
      }]
