<local:ExportLoaderControl x:Class="LegendaryExplorer.UserControls.ExportLoaderControls.MaterialEditor.MaterialEditorExportLoader"
                           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                           xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                           xmlns:local="clr-namespace:LegendaryExplorer.UserControls.ExportLoaderControls"
                           xmlns:matEd="clr-namespace:LegendaryExplorer.Tools.LiveLevelEditor.MatEd"
                           xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                           xmlns:materialEditor="clr-namespace:LegendaryExplorer.UserControls.ExportLoaderControls.MaterialEditor"
                           xmlns:converters="clr-namespace:LegendaryExplorer.SharedUI.Converters"
                           xmlns:system="clr-namespace:System;assembly=System.Runtime"
                           mc:Ignorable="d" 
                           d:DesignHeight="450" d:DesignWidth="800"
                           Loaded="MaterialEditor_Loaded"
                           Unloaded="MaterialEditor_Unloaded"
                           DataContext="{Binding RelativeSource={RelativeSource Self}}">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
        <DataTemplate DataType="{x:Type materialEditor:MatEdTexture}" >
            <DockPanel>
                <Image DockPanel.Dock="Left" Width="64" Height="64" Source="{Binding LoadedBitMap}"
                       MouseMove="TextureParam_MouseMove"
                       GiveFeedback="TextureParam_GiveFeedback"/>
                <StackPanel>
                    <TextBlock Text="{Binding DisplayString}" Margin="5,0"/>
                    <Button Content="Change" HorizontalAlignment="Left" Margin="5,0" Padding="4,3" Command="{Binding ReplaceTextureCommand}"
                            Visibility="{Binding AllowEditingUniformTextures, Converter={StaticResource BooleanToVisibilityConverter},
                                        RelativeSource={RelativeSource FindAncestor, AncestorType=materialEditor:MaterialEditorExportLoader}}"/>
                </StackPanel>
            </DockPanel>
        </DataTemplate>
        <!-- Parameters -->
        <DataTemplate DataType="{x:Type materialEditor:TextureParameterMatEd}">
            <DockPanel>
                <Image DockPanel.Dock="Left" Width="64" Height="64" Source="{Binding LoadedBitMap}" 
                       AllowDrop="True"
                       MouseMove="TextureParam_MouseMove"
                       GiveFeedback="TextureParam_GiveFeedback"
                       DragOver="TextureParam_DragOver"
                       Drop="TextureParam_DragDrop"/>
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding ParameterName}" 
                                   FontWeight="Bold"
                                   Margin="5,0,0,0"/>
                        <TextBlock Text="Default expression value" Margin="5,0" 
                               FontStyle="Italic"
                               VerticalAlignment="Center"
                               Visibility="{Binding IsDefaultParameter, FallbackValue=Collapsed, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </StackPanel>
                    <TextBlock Text="{Binding DisplayString}" Margin="5,0"/>
                    <Button Content="Change" HorizontalAlignment="Left" Margin="5,0" Padding="4,3" Command="{Binding ReplaceTextureCommand}"/>
                </StackPanel>
            </DockPanel>
        </DataTemplate>
        <DataTemplate DataType="{x:Type materialEditor:ScalarParameter}">
            <StackPanel Orientation="Horizontal" Margin="0,2">
                <TextBlock Text="{Binding ParameterName}" FontWeight="Bold"  MinWidth="218" VerticalAlignment="Center"/>
                <xctk:SingleUpDown Value="{Binding ParameterValue}" ValueChanged="Scalar_Changed" Width="100"/>
                <TextBlock Text="Default expression value" Margin="5,0" 
                       FontStyle="Italic"
                       VerticalAlignment="Center"
                       Visibility="{Binding IsDefaultParameter, FallbackValue=Collapsed, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate DataType="{x:Type materialEditor:VectorParameter}">
            <StackPanel Orientation="Horizontal" Margin="0,2">
                <TextBlock Text="{Binding ParameterName}" MinWidth="200" FontWeight="Bold" VerticalAlignment="Center"/>
                <TextBlock Text="R:" Margin="5,0,2,0" VerticalAlignment="Center" FontWeight="Bold"/>
                <xctk:SingleUpDown Value="{Binding ParameterValue.W, Mode=TwoWay}" ValueChanged="VectorR_Changed" Width="100"/>
                <TextBlock Text="G:" Margin="5,0,2,0" VerticalAlignment="Center" FontWeight="Bold"/>
                <xctk:SingleUpDown Value="{Binding ParameterValue.X, Mode=TwoWay}" ValueChanged="VectorG_Changed" Width="100"/>
                <TextBlock Text="B:" Margin="5,0,2,0" VerticalAlignment="Center" FontWeight="Bold"/>
                <xctk:SingleUpDown Value="{Binding ParameterValue.Y, Mode=TwoWay}" ValueChanged="VectorB_Changed" Width="100"/>
                <TextBlock Text="A:" Margin="5,0,2,0" VerticalAlignment="Center" FontWeight="Bold"/>
                <xctk:SingleUpDown Value="{Binding ParameterValue.Z, Mode=TwoWay}" ValueChanged="VectorA_Changed" Width="100"/>
                <xctk:ColorPicker SelectedColorChanged="VectorColorChanged"/>

                <TextBlock Text="Default expression value" Margin="5,0" 
                       FontStyle="Italic"
                       VerticalAlignment="Center"
                       Visibility="{Binding IsDefaultParameter, FallbackValue=Collapsed, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </StackPanel>
        </DataTemplate>
    </UserControl.Resources>
    <DockPanel>
        <StatusBar DockPanel.Dock="Top" HorizontalContentAlignment="Stretch" Visibility="{Binding ShowSaveBar, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Button Content="Save changes" Padding="8,4" HorizontalAlignment="Right" Command="{Binding SaveChangesCommand}" VerticalAlignment="Center"/>
            <TextBlock Text="Has unsaved changes" Foreground="Red" Visibility="{Binding HasUnsavedChanges, Converter={StaticResource BooleanToVisibilityConverter}}" VerticalAlignment="Center"/>
            <CheckBox Content="Auto save changes" VerticalAlignment="Center" IsChecked="{Binding UpdatesTakeEffectInstantly}"/>
        </StatusBar>
        <TextBlock Text="SHADER WAS NOT FOUND - THIS MATERIAL WILL NOT WORK IN GAME" Foreground="Red" FontWeight="Bold" DockPanel.Dock="Top" Visibility="{Binding MaterialHasNoShader, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        <WrapPanel DockPanel.Dock="Top" Orientation="Horizontal">
            <TextBlock Text="This material can be used on:" FontWeight="Bold" DockPanel.Dock="Top" Margin="5,0"/>
            <ItemsControl ItemsSource="{Binding MatInfo.WorksOn}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type system:String}">
                        <TextBlock Text="{Binding}" Margin="4,0"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </WrapPanel>
        <ScrollViewer>
            <DockPanel>
                <GroupBox DockPanel.Dock="Top" Margin="2,0">
                    <GroupBox.Header>
                        <TextBlock Text="{Binding MatInfo.BaseMaterial.InstancedFullPath, StringFormat='Base Material Uniform Textures ({0})'}"/>
                    </GroupBox.Header>
                    <ItemsControl ItemsSource="{Binding MatInfo.UniformTextures}"/>
                </GroupBox>
                <GroupBox Header="Instance Material Expressions" Margin="2,0">
                    <DockPanel>
                        <TextBlock TextWrapping="Wrap"
                                       Text="Material exports don't support expression values. To change these, you must generate a Material Instance Constant from this material." 
                                       DockPanel.Dock="Top" 
                                       Visibility="{Binding ShowGenerateMIC, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <Button Content="Generate Material Instance Constant" DockPanel.Dock="Top" HorizontalAlignment="Left" Padding="4,2"
                                    Visibility="{Binding ShowGenerateMIC, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    Click="GenerateMaterialInstanceConstant_Click"/>
                        <ItemsControl ItemsSource="{Binding MatInfo.Expressions}" IsEnabled="{Binding SupportsExpressionEditing}"/>
                    </DockPanel>
                </GroupBox>
            </DockPanel>
        </ScrollViewer>
    </DockPanel>
</local:ExportLoaderControl>
