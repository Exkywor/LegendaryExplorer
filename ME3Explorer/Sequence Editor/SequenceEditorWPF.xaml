<global:WPFBase
    xmlns:global="clr-namespace:ME3Explorer" x:Class="ME3Explorer.Sequence_Editor.SequenceEditorWPF"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:ME3Explorer.Sequence_Editor"
        xmlns:SharedUI="clr-namespace:ME3Explorer.SharedUI"
        xmlns:properties="clr-namespace:ME3Explorer.Properties"
        xmlns:Converters="clr-namespace:ME3Explorer.SharedUI.Converters"
        xmlns:grapheditor="clr-namespace:UMD.HCIL.GraphEditor"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:vhelp="clr-namespace:ME3Explorer.SharedUI.PeregrineTreeView"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:dd="urn:gong-wpf-dragdrop"
        xmlns:packages="clr-namespace:ME3ExplorerCore.Packages;assembly=ME3ExplorerCore"
        mc:Ignorable="d"
        d:DataContext="{Binding RelativeSource={RelativeSource Self}}"
        Loaded="SequenceEditorWPF_Loaded"
        Closing="SequenceEditorWPF_Closing"
        Title="Sequence Editor" Height="750" Width="1300" MinWidth="900" MinHeight="200">
    <Window.Resources>
        <Converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <Converters:NullEnabledConverter x:Key="NullEnabledConverter"/>
        <Converters:NullVisibilityConverter x:Key="NullVisibilityConverter"/>
        <Converters:InverseVisibilityConverter x:Key="InverseVisibilityConverter"/>
        <Converters:GameTypeConverter x:Key="GameTypeConverter"/>
        <ContextMenu x:Key="nodeContextMenu" Closed="ContextMenu_Closed">
            <MenuItem Header="Open in Package Editor" Click="OpenInPackageEditor_Clicked" />
            <MenuItem Header="Open Referenced Object in Package Editor" Click="OpenReferencedObjectInPackageEditor_Clicked" Name="openRefInPackEdMenuItem"/>
            <MenuItem Header="Open in Interp Viewer" Click="OpenInInterpViewer_Clicked" Name="interpViewerMenuItem"/>
            <MenuItem Header="Open in Dialogue Editor" Click="OpenInDialogueEditor_Clicked" Name="dialogueEditorMenuItem"/>
            <MenuItem Header="Open Referenced State Event in Plot Editor" Name="plotEditorMenuItem" Click="PlotEditorMenuItem_Click"/>
            <Separator />
            <MenuItem Header="Clone Object" Click="CloneObject_Clicked" ToolTip="Create a new node as a duplicate of this one"/>
            <MenuItem Header="Clone InterpData tree" Click="CloneInterpData_Clicked" Name="cloneInterpDataMenuItem" ToolTip="Clone InterpData and all of its children"/>
            <MenuItem Header="Edit Comment" Click="EditComment_Click" ToolTip="Add or edit this node's comment"/>
            <MenuItem Header="Break Links" Name="breakLinksMenuItem">
                <MenuItem Header="Output Links" Name="outputLinksMenuItem"/>
                <MenuItem Header="Var Links" Name="varLinksMenuItem"/>
                <MenuItem Header="Event Links" Name="eventLinksMenuItem"/>
                <MenuItem Header="Break All" Name="breakAllLinksMenuItem" Click="removeAllLinks"/>
            </MenuItem>
            <MenuItem Header="Repoint incoming references" Name="repointIncomingReferences" Click="RepointIncomingReferences_Click"/>
            <MenuItem Header="Trash and remove from sequence" Name="removeFromSequenceMenuItem" Click="TrashAndRemoveFromSequence_Click"/>
        </ContextMenu>
        <ContextMenu x:Key="backContextMenu">
            <MenuItem Header="Add Existing Object" Click="AddObject_Clicked" ToolTip="Add existing Sequence Object to this Sequence"/>
        </ContextMenu>
        <system:Boolean x:Key="True">True</system:Boolean>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="R" Modifiers="Control+Shift" Command="{Binding ForceReloadPackageCommand}"/>
        <KeyBinding Key="L" Modifiers="Control"  Command="{Binding AutoLayoutCommand}"/>
        <KeyBinding Key="O" Modifiers="Control" Command="{Binding OpenCommand}"/>
        <KeyBinding Key="S" Modifiers="Control" Command="{Binding SaveCommand}"/>
        <KeyBinding Key="S" Modifiers="Control+Shift" Command="{Binding SaveAsCommand}"/>
        <KeyBinding Key="G" Modifiers="Control" Command="{Binding GotoCommand}"/>
        <KeyBinding Key="F" Modifiers="Control" Command="{Binding SearchCommand}"/>
    </Window.InputBindings>
    <Grid>
        <DockPanel>
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="File" Padding="4">
                    <MenuItem Header="_Open" Command="{Binding OpenCommand}" InputGestureText="Ctrl+O"
                                ToolTip="Open a package file" />
                    <MenuItem Header="Force reload package*" Command="{Binding ForceReloadPackageCommand}" InputGestureText="Ctrl+Shift+R" ToolTip="Forcibly reloads this package file, if it was loaded from disk.&#10;This operation will drop this package out of the package sharing system across tools, be careful as edits will not sync across tools!"/>
                    <MenuItem Header="_Save" Command="{Binding SaveCommand}" InputGestureText="Ctrl+S"
                              ToolTip="Save package file in-place"
                              IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}" />
                    <MenuItem Header="Save as" Command="{Binding SaveAsCommand}" InputGestureText="Ctrl+Shift+S"
                                ToolTip="Save package file to another location"
                                IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}" />
                    <Separator />
                    <MenuItem Name="Recents_MenuItem" Header="Recent" IsEnabled="false" />
                </MenuItem>

                <MenuItem Header="Tools" Padding="4">
                    <MenuItem Header="Goto #" Command="{Binding GotoCommand}" InputGestureText="Ctrl+G" />
                    <MenuItem Header="Add Object" Click="AddObject_Clicked"
                                ToolTip="Add existing Sequence Object to this Sequence"
                                IsEnabled="{Binding SelectedSequence, Converter={StaticResource NullEnabledConverter}}" />
                    <MenuItem Header="Search By Comment" Command="{Binding SearchCommand}" InputGestureText="Ctrl+F" />
                    <MenuItem Header="Save View" Command="{Binding SaveViewCommand}" ToolTip="Save the node layout" />
                    <MenuItem Header="Save Image" Command="{Binding SaveImageCommand}"
                                ToolTip="Save image of full Sequence" />
                    <MenuItem Header="Open Kismet Log (restricted to opened file)"
                                Command="{Binding KismetLogCommand}"
                                CommandParameter="{StaticResource True}" />
                    <MenuItem Header="Open Kismet Log (restricted to current sequence)"
                              Command="{Binding KismetLogCommand}"
                              CommandParameter="CurrentSequence"/>
                    <MenuItem Header="Open Kismet Log for ME3" Command="{Binding KismetLogCommand}"
                                CommandParameter="{x:Static packages:MEGame.ME3}" />
                    <MenuItem Header="Open Kismet Log for ME2" Command="{Binding KismetLogCommand}"
                                CommandParameter="{x:Static packages:MEGame.ME2}" />
                    <!-- TODO: Uncomment when ME1 Kismet Logger is created -->
                    <!--<MenuItem Header="Open Kismet Log for ME1" Command="{Binding KismetLogCommand}" CommandParameter="{x:Static packages:MEGame.ME1}"/>-->
                </MenuItem>

                <MenuItem Header="View Options" Padding="4">
                    <MenuItem Name="ShowOutputNumbers_MenuItem" Header="Show Output Numbers" IsCheckable="True"
                                Click="showOutputNumbers_Click" />
                    <MenuItem Name="AutoSaveView_MenuItem" Header="Auto-Save View" IsCheckable="True" />
                    <MenuItem Name="GlobalSeqRefViewSavesMenuItem" Header="Use Global Sequence Ref View Saves"
                                IsCheckable="True" Click="GlobalSeqRefViewSavesMenuItem_OnClick" />
                    <MenuItem Name="ShowAdditionalInfoInCommentTextMenuItem"
                                Header="Show parsed information in comments"
                                IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=SequenceEditor_ShowParsedInfo, Mode=TwoWay}"
                                IsCheckable="True" Click="ShowAdditionalInfoInCommentTextMenuItem_OnClick" />
                    <MenuItem Name="MaxVarStringLength_MenuItem" StaysOpenOnClick="True"
                                VerticalContentAlignment="Center">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Maximum Var String Length" Margin="0,2,3,0" />
                                <xctk:IntegerUpDown
                                    Value="{Binding Source={x:Static properties:Settings.Default}, Path=SequenceEditor_MaxVarStringLength, Mode=TwoWay}"
                                    ClipValueToMinMax="True" Minimum="5" Maximum="1000"
                                    ValueChanged="IntegerUpDown_ValueChanged" VerticalContentAlignment="Center" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                </MenuItem>

                <MenuItem Header="Layout" Padding="4">
                    <MenuItem Header="Re-Run Auto Layout" Command="{Binding AutoLayoutCommand}"
                                InputGestureText="Ctrl+L"
                                ToolTip="Attempt to layout sequence objects in a comprehensible fashion" />
                </MenuItem>
                <MenuItem Header="Experiments" Padding="4">
                    <MenuItem Header="Scan folder for sequence object loops" Command="{Binding ScanFolderForLoopsCommand}"
                              ToolTip="Scans a folder of package files for sequence objects that have an output that leads to itself&#10;These types of loops severely harm game performance" />
                </MenuItem>
            </Menu>
            <StatusBar Height="23" DockPanel.Dock="Bottom">
                <SharedUI:StatusBarGameIDIndicator
                    Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}}"
                    GameType="{Binding Pcc, Converter={StaticResource GameTypeConverter}}" Margin="0,-4" />
                <StatusBarItem>
                    <TextBlock Name="StatusBar_LeftMostText" Text="{Binding StatusText}" />
                </StatusBarItem>
                <StatusBarItem HorizontalAlignment="Right">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Name="StatusBar_RightSide_LastSaved"
                                    Text="{Binding Pcc.LastSaved, StringFormat='Last saved at {0}'}"
                                    Foreground="Gray" />
                    </StackPanel>
                </StatusBarItem>
            </StatusBar>
            <!-- Main Content panel-->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="2*" />
                    <RowDefinition Height="5" />
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="5" />
                    <RowDefinition Height="Auto" Name="kismetLogParserRow" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ListBox Name="CurrentObjects_ListBox" Grid.Column="2" Grid.RowSpan="3"
                            ItemsSource="{Binding CurrentObjects}"
                            SelectionChanged="CurrentObjectsList_SelectedItemChanged"
                            HorizontalContentAlignment="Stretch"
                            SelectionMode="Extended"
                            Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="0,0,5,0">
                                <Grid.Style>
                                    <Style TargetType="{x:Type Grid}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Export.EntryHasPendingChanges}"
                                                            Value="true">
                                                <Setter Property="Background" Value="Yellow" />
                                                <Setter Property="ToolTip"
                                                        Value="This export has been modified but the file has not yet been saved" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding Export.UIndex}" />
                                <TextBlock Grid.Column="1" Text="{Binding Export.ObjectName.Instanced}" />
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style>
                            <Style.Triggers>
                                <Trigger Property="Selector.IsSelected" Value="True">
                                    <Setter Property="TextElement.FontWeight" Value="Bold" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
                <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch" Grid.Column="0" />
                <GridSplitter Grid.Row="0" Grid.RowSpan="3" Width="5" HorizontalAlignment="Stretch" Grid.Column="1" />
                <Grid Column="0" Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition MinHeight="100" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="300" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="300" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" Grid.ColumnSpan="3"
                                Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}, ConverterParameter='Reversed'}">
                        <TextBlock Margin="5" Text="Welcome to Sequence Editor" FontWeight="Bold" />
                        <TextBlock Margin="5">
                            Sequence Editor is the toolsets editor for Kismet sequencencing, which is heavily utilized in Mass Effect games.
                            <LineBreak />
                            Package files that contain sequences are ones that contain levels, which for ME1 are nearly everything in the
                            <LineBreak/>
                            Maps folder, and for ME2/ME3 the BioA/D/H/P/S files.
                            <LineBreak/>
                            <LineBreak/>
                            Connect sequences by dragging their outputs to inputs. Use the sequence toolbox on the left side to add new 
                            <LineBreak/>
                            objects in as needed. Look for existing usages of sequence objects in files to see how they are used.
                            <LineBreak/>
                            <LineBreak/>
                            If you have issues with Sequence Editor, please report them to one of the following places:
                            <LineBreak/>
                            - <Hyperlink NavigateUri="{Binding Source={x:Static global:App.DiscordInviteURL}, Mode=OneTime}" Foreground="#FF182574" global:HyperlinkExtensions.IsExternal="True">
                                <Run Text="The ME3Tweaks Discord (ME3Explorer channel)"/>
                            </Hyperlink>                                <LineBreak/>
                            - The issues list on GitHub at 
                            <Hyperlink NavigateUri="{Binding Source={x:Static global:App.BugReportURL}, Mode=OneTime}" Foreground="#FF182574" global:HyperlinkExtensions.IsExternal="True">
                                <Run Text="{Binding Source={x:Static global:App.BugReportURL}, Mode=OneTime}"/>
                            </Hyperlink>
                        </TextBlock>
                    </StackPanel>
                    <SharedUI:RecentsControl x:Name="RecentsController" Grid.Column="3" Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}, ConverterParameter='Reversed'}"/>
                    <TreeView x:Name="Sequences_TreeView" Grid.Row="0" Grid.Column="0" FontFamily="Consolas"
                                Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}}"
                                ItemsSource="{Binding TreeViewRootNodes}" FocusManager.IsFocusScope="True">
                        <TreeView.Resources>
                            <HierarchicalDataTemplate DataType="{x:Type global:TreeViewEntry}"
                                                        ItemsSource="{Binding Sublinks}">
                                <StackPanel Orientation="Horizontal">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding DisplayName}"
                                                    Foreground="{Binding Path=ForegroundColor}">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Style.Triggers>
                                                        <DataTrigger
                                                            Binding="{Binding Path=Entry.EntryHasPendingChanges}"
                                                            Value="true">
                                                            <Setter Property="Background" Value="Yellow" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                    </StackPanel>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                                            <ei:ChangePropertyAction PropertyName="IsSelected" Value="true"
                                                                        TargetObject="{Binding}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                                Color="LightBlue" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                                                Color="Black" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                                                Color="LightBlue" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                                                Color="Black" />

                        </TreeView.Resources>
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                                <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}" />
                                <Setter Property="vhelp:TreeViewItemHelper.BringSelectedItemIntoView" Value="True" />
                                <Setter Property="vhelp:TreeViewItemHelper.BringExpandedChildrenIntoView"
                                        Value="True" />
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <i:Interaction.Behaviors>
                            <vhelp:TreeViewHelper BoundSelectedItem="{Binding SelectedItem}" />
                        </i:Interaction.Behaviors>
                    </TreeView>
                    <GridSplitter Grid.Row="0" Grid.Column="1" Width="5" HorizontalAlignment="Stretch"
                                    Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}}" />
                    <global:InterpreterWPF x:Name="Properties_InterpreterWPF" Grid.Row="0" Grid.Column="2"
                                            Grid.ColumnSpan="2" HideHexBox="True"
                                            Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}, RelativeSource={RelativeSource AncestorType=Window}}" />
                </Grid>
                <Grid Grid.Column="0" Grid.Row="0" Name="graphGrid">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <WindowsFormsHost Grid.Column="1" Name="GraphHost" VerticalAlignment="Stretch"
                                        HorizontalAlignment="Stretch"
                                        Visibility="{Binding Visibility, ElementName=graphImageSub, Converter={StaticResource InverseVisibilityConverter}}">
                        <grapheditor:GraphEditor />
                    </WindowsFormsHost>
                    <Expander Grid.Column="0" Name="toolBoxExpander" HorizontalAlignment="Left"
                                IsEnabled="{Binding SelectedSequence, Converter={StaticResource NullEnabledConverter}}"
                                ExpandDirection="Right" IsExpanded="False" Background="Orange"
                                SharedUI:Bindings.VisibilityToEnabled="True">
                        <Expander.Header>
                            <TextBlock Text="Sequence Object Toolbox" Foreground="Black" VerticalAlignment="Center"
                                        Margin="0,0,4,0">
                                <TextBlock.LayoutTransform>
                                    <RotateTransform Angle="-90" />
                                </TextBlock.LayoutTransform>
                            </TextBlock>
                        </Expander.Header>
                        <TabControl>
                            <TabItem Header="Common">
                                <SharedUI:ToolBox x:Name="commonToolBox" />
                            </TabItem>
                            <TabItem Header="Events">
                                <SharedUI:ToolBox x:Name="eventsToolBox" />
                            </TabItem>
                            <TabItem Header="Actions">
                                <SharedUI:ToolBox x:Name="actionsToolBox" />
                            </TabItem>
                            <TabItem Header="Conditions">
                                <SharedUI:ToolBox x:Name="conditionsToolBox" />
                            </TabItem>
                            <TabItem Header="Variables">
                                <SharedUI:ToolBox x:Name="variablesToolBox" />
                            </TabItem>
                        </TabControl>
                    </Expander>
                    <Image Grid.Column="1" Visibility="Hidden" Name="graphImageSub" Stretch="None" />
                    <Image Grid.Column="0" Visibility="Hidden" Name="expanderImageSub" Stretch="None" />
                </Grid>
                <GridSplitter Grid.Row="3" Height="5" HorizontalAlignment="Stretch" Grid.Column="0"
                                Grid.ColumnSpan="3"
                                Visibility="{Binding ElementName=kismetLogParser, Path=Visibility}" />
                <local:KismetLogParser x:Name="kismetLogParser" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3"
                                        Visibility="Collapsed" />
            </Grid>
        </DockPanel>
        <xctk:BusyIndicator Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibilityConverter}}" IsBusy="{Binding Path=IsBusy}" BusyContent="{Binding BusyText}"/>
    </Grid>
</global:WPFBase>